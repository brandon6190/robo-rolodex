{"version":3,"sources":["components/Title/Title.component.jsx","components/RealTimeSearch/SearchField/SearchField.component.jsx","components/RealTimeSearch/List/Card/Card.component.jsx","components/RealTimeSearch/List/List.container.jsx","components/RealTimeSearch/RealTimeSearch.container.jsx","App.js","reportWebVitals.js","index.js"],"names":["Title","props","SearchField","changeHanlder","className","type","placeholder","onChange","Card","src","monster","id","alt","name","email","List","monsters","map","RealTimeSearch","searchFieldChange","event","setState","inputValue","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAQeA,MANf,SAAeC,GACX,OACI,gD,kCCWOC,MAXf,YAAuC,IAAjBC,EAAgB,EAAhBA,cAClB,OACI,uBACIC,UAAU,eACVC,KAAK,SACLC,YAAY,qBACZC,SAAUJ,K,YCGPK,MAVf,SAAcP,GACV,OACI,sBAAKG,UAAU,OAAf,UACI,qBAAKA,UAAU,SAASK,IAAG,+BAA0BR,EAAMS,QAAQC,GAAxC,0BAAoEC,IAAI,WACnG,oBAAIR,UAAU,OAAd,SAAsBH,EAAMS,QAAQG,OACpC,mBAAGT,UAAU,QAAb,SAAsBH,EAAMS,QAAQI,YCOjCC,MAVf,YAA2B,IAAZC,EAAW,EAAXA,SACX,OACI,qBAAKZ,UAAU,OAAf,SACKY,EAASC,KAAI,SAAAP,GAAO,OACjB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UC+BlBO,E,kDAnCb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IAcRkB,kBAAoB,SAAAC,GAClB,EAAKC,SAAS,CAAEC,WAAYF,EAAMG,OAAOC,SAbzC,EAAKC,MAAQ,CACXT,SAAU,GACVM,WAAY,IALG,E,qDASnB,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEL,SAAUc,S,oBAO7C,WACE,MAAiCC,KAAKN,MAA9BT,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,WAEZU,EAAmBhB,EAASiB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQG,KAAKqB,cAAcC,SAASb,EAAWY,gBAAkBxB,EAAQI,MAAMoB,cAAcC,SAASb,EAAWY,kBAGnH,OACE,sBAAK9B,UAAU,qBAAf,UACE,cAAC,EAAD,CAAaD,cAAe4B,KAAKZ,oBACjC,cAAC,EAAD,CAAMH,SAAUgB,W,GA9BGI,IAAMC,WCWpBC,MATf,WACE,OACE,sBAAKlC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f4d1c98.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Title(props) {\n    return (\n        <h1>Robo Rolodex!</h1>\n    );\n}\n\nexport default Title;","import React from 'react';\n\nimport './SearchField.styles.css';\n\nfunction SearchField({changeHanlder}) {\n    return (\n        <input \n            className='search-field' \n            type=\"search\" \n            placeholder=\"Search for Monster\" \n            onChange={changeHanlder}\n        />\n    )\n}\n\nexport default SearchField;","import React from 'react';\nimport './Card.styles.css';\n\nfunction Card(props) {\n    return (\n        <div className='card'>\n            <img className='avatar' src={`https://robohash.org/${props.monster.id}?set=set1&size=180x180`} alt=\"avatar\" />\n            <h2 className='name'>{props.monster.name}</h2>\n            <p className='email'>{props.monster.email}</p>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport './List.styles.css';\n\nimport Card from './Card/Card.component';\n\nfunction List({monsters}) {\n    return (\n        <div className=\"list\">\n            {monsters.map(monster => (\n                <Card key={monster.id} monster={monster} />\n            ))}\n        </div>\n    )\n}\n\nexport default List;","import React from 'react';\nimport SearchField from './SearchField/SearchField.component';\nimport List from './List/List.container';\n\nclass RealTimeSearch extends React.Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        monsters: [],\n        inputValue: ''\n      };\n    }\n  \n    componentDidMount() {\n      fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ monsters: users }));\n    }\n  \n    searchFieldChange = event => {\n      this.setState({ inputValue: event.target.value });\n    }\n  \n    render() {\n      const { monsters, inputValue } = this.state;\n\n      const filteredMonsters = monsters.filter(monster => (\n        monster.name.toLowerCase().includes(inputValue.toLowerCase()) || monster.email.toLowerCase().includes(inputValue.toLowerCase())\n      ));\n\n      return (\n        <div className='monsters-container'>\n          <SearchField changeHanlder={this.searchFieldChange} />          \n          <List monsters={filteredMonsters} />\n        </div>\n      )\n    }\n  }\n\n  export default RealTimeSearch;","import React from 'react';\nimport './App.css';\n\nimport Title from './components/Title/Title.component';\nimport RealTimeSearch from './components/RealTimeSearch/RealTimeSearch.container';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <RealTimeSearch />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}